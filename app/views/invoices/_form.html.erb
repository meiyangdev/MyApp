<%= form_with model: @invoice do |form|%>
<div class="form-group row">
  <div class="col">
    <%= form.label :name , "Client: "%>
    <%= form.select :client_id,
    current_user.clients.collect {|client| [client.name, client.id ]} %>
  </div>
</div>
<div class="form-group" id="fieldsetContainer">
  <%= form.fields_for :items do |item| %>
    <fieldset id="0">
      <div class="form-row" >
        <div class="col" >
          <%= item.label :invoice_item, "Invoice Item: " %>
          <%= item.text_field :invoice_item %>
        </div>
        <div class="col" >
          <%= item.label :price, "Price/item: " %>
          <%= item.number_field :price, min: 0.00, step: 0.001 %>
        </div>
        <div class="col" >
          <%= item.label :quantity , "Quantity: " %>
          <%= item.text_field :quantity, min: 0%>
        </div>
      </div>
      <div class="form-row">
        <%= button_tag('DEL', id: "del-"+item.index.to_s, type: "button ", class: "deleteButtons btn btn-large btn-primary")  %>
      </div>
    </fieldset>
 <% end %>
</div>
<div class="form-group">
    <button id="addItem",type: "button", class = "btn btn-large btn-primary"> Add Item</button>
</div>

<div class="form-group row">
 <div class="col">
    <%= form.label :expence_date, "Expense Date:" %>
    <%= form.date_field :expence_date %>
  </div>
</div>
<div>
    <%= form.submit "Submit", class: "btn btn-primary" %>
</div>

<% end %>

<script>
  const createButton = document.getElementById("addItem")

  function onCreateClick(e) {
    e.preventDefault()
 // const row = document.querySelector('#fieldsetContainer fieldset').cloneNode( true )
    // const invoiceItem = row.querySelector('#invoice_items_attributes_0_invoice_item')
    // invoiceItem.value = ''
    // const invoicePrice = row.querySelector('#invoice_items_attributes_0_price')
    // invoicePrice.value = ''
    // const invoiceQuantity = row.querySelector('#invoice_items_attributes_0_quantity')
    // invoiceQuantity.value = ''
    // document.getElementById('fieldsetContainer').appendChild(row)

    const lastId = document.querySelector('#fieldsetContainer').lastElementChild.id.split("_")[3];

    const newId = parseInt(lastId, 10) + 1;

    // const newFieldset = document.getElementById('0').outerHTML.replace(/0/g,newId);

    const newFieldset =` <fieldset id="${newId}">
      <div class="form-row">
        <div class="col">
          <label for="invoice_items_attributes_${newId}_invoice_item">Invoice Item: </label>
          <input type="text" name="invoice[items_attributes][${newId}][invoice_item]" id="invoice_items_attributes_${newId}_invoice_item">
        </div>
        <div class="col">
          <label for="invoice_items_attributes_${newId}_price">Price/item: </label>
          <input type="text" name="invoice[items_attributes][${newId}][price]" id="invoice_items_attributes_${newId}_price">
        </div>
        <div class="col">
          <label for="invoice_items_attributes_${newId}_quantity">Quantity: </label>
          <input type="text" name="invoice[items_attributes][${newId}][quantity]" id="invoice_items_attributes_${newId}_quantity">
        </div>
      </div>
      <div class="form-row">
        <button name="button" type="button" id="del-${newId}" class="deleteButtons btn-large btn-primary">DEL</button>
      </div>
    </fieldset>`

    document.querySelector('#fieldsetContainer').insertAdjacentHTML(
        'beforeend', newFieldset)
    bindDeleteButtonClickEvents()
  }

  function buttonsArray() {
    allButtons=Array.from(document.querySelectorAll('.deleteButtons'))
    return allButtons
  }

  function onDeleteClick(e) {
    e.preventDefault()

    if(e.target.id !== "del-0") {
    e.target.closest('fieldset').remove()
    }
    else {
     alert ("last item, are you sure?")
    }
  }
  createButton.addEventListener("click", onCreateClick)

  function bindDeleteButtonClickEvents() {
    const array = buttonsArray()
    array.forEach(deleteButton => {
        deleteButton.addEventListener("click", onDeleteClick)

        })
  }

  // const createButton = document.getElementById("addItem")
  // createButton.addEventListener("click", (e)=>{
  //  e.preventDefault()
  //   const lastId = document.querySelector('#fieldsetContainer').lastElementChild.id;

  //   const newId = parseInt(lastId, 10) + 1;

  //   const newFieldset = document.getElementById('0').outerHTML.replace(/0/g,newId);

  //   document.querySelector('#fieldsetContainer').insertAdjacentHTML(
  //       'beforeend', newFieldset
  //   )
  //   const deleteButtons = Array.from(document.querySelectorAll('.deleteButtons'))
  //   deleteButtons.forEach(deleteButton => deleteButton.addEventListener("click", (e)=>{
  //     deleteButtons.forEach(deleteButton => {
  //       if (deleteButton.id == e.target.id) {
  //         deleteButton.closest('fieldset').remove()
  //       }
  //     })
  //   })
  //   )
  // })
  </script>
