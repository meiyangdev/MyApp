<%= form_with model: @invoice do |form|%>
<div class="form-group row">
  <div class="col">
    <%= form.label :name , "Client: "%> <%= form.select :client_id,
    current_user.clients.collect{|client| [client.name, client.id ]} %>
  </div>
</div>
<div class="form-group" id="fieldsetContainer">
  <fieldset id="0">
    <%= form.fields_for :items do |item| %>
    <div class="form-row">
      <div class="col">
        <%= item.label :invoice_item, "Invoice Item: " %>
        <%= item.text_field :invoice_item %>
      </div>
      <div class="col">
        <%= item.label :price, "Price/item: " %>
        <%= item.text_field :price %>
      </div>
      <div class="col">
        <%= item.label :quantity , "Quantity: " %>
        <%= item.text_field :quantity %>
      </div> 
    </div>
    <div class="form-row">
 <%= button_tag('DEL', id: "del-"+item.index.to_s, type: "button", class: "deleteButtons")  %>
  

        
    </div>
    <% end %>
    </fieldset>
</div>
<div class="form-group">
    <button id="addItem",type: "button"> Add Item</button>
</div>

<div class="form-group row">
 <div class="col">
    <%= form.label :expence_date, "Expense Date:" %> <%= form.text_field :expence_date %>
  </div>
</div>
<div><%= form.submit "Submit", class: "btn btn-primary" %></div>

<% end %> 

<script>

  // function deleteRow(id) {
    
  // }

  // function onDeleteClick(event) {
  //   if (condition) {
  //     deleteRow(event.target.id)
  //   }
  //   else {
  //     alert()
  //   }
  // }
  
  // function onCreateClick(event) {
    
  // }

  // createButton.addEventListener("click", onCreateClick)
  // deleteButton.addEventListener("click", onDeleteClick)

  const createButton = document.getElementById("addItem")
  createButton.addEventListener("click", (e)=>{
   e.preventDefault()
    const lastId = document.querySelector('#fieldsetContainer').lastElementChild.id;

    const newId = parseInt(lastId, 10) + 1;

    const newFieldset = document.getElementById('0').outerHTML.replace(/0/g,newId);

    document.querySelector('#fieldsetContainer').insertAdjacentHTML(
        'beforeend', newFieldset
    ) 
    const deleteButtons = Array.from(document.querySelectorAll('.deleteButtons'))
    console.log(deleteButtons)
    console.log(typeof deleteButtons)
    deleteButtons.forEach(deleteButton => deleteButton.addEventListener("click", (e)=>{
      console.log(e.target.id)
      deleteButtons.forEach(deleteButton => {
        if (deleteButton.id == e.target.id) {
          deleteButton.closest('fieldset').remove()
        }
      })
    })
    )


   })
  // Find all delete buttons - add a class to the button e.g class="delete-button" getElementsByClassName or document.querySelectorAll('.delete-button')
  // loop all delete buttons
  // bind an event for each button e.g deleteButtons.forEach ( button => button.addEventListener('click', onDeleteClick))
  // create onDeleteClick() function. Remove the wrapper/row and remove eventListener  

  
</script>
