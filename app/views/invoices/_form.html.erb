<%= form_with model: @invoice do |form|%>
<div class="form-group row">
  <div class="col">
    <%= form.label :name , "Client: "%> <%= form.select :client_id,
    current_user.clients.collect{|client| [client.name, client.id ]} %>
  </div>
</div>
<div class="form-group" id="fieldsetContainer">
  <%= form.fields_for :items do |item| %>
    <fieldset>
      <div class="form-row">
        <div class="col">
          <%= item.label :invoice_item, "Invoice Item: " %>
          <%= item.text_field :invoice_item %>
        </div>
        <div class="col">
          <%= item.label :price, "Price/item: " %>
          <%= item.text_field :price %>
        </div>
        <div class="col">
          <%= item.label :quantity , "Quantity: " %>
          <%= item.text_field :quantity %>
        </div> 
      </div>
      <div class="form-row">
        <%= button_tag('DEL', id: "del-"+item.index.to_s, type: "button", class: "deleteButtons")  %>  
      </div>
    </fieldset>
  <% end %>
</div>
<div class="form-group">
    <button id="addItem",type: "button"> Add Item</button>
</div>

<div class="form-group row">
 <div class="col">
    <%= form.label :expence_date, "Expense Date:" %> <%= form.text_field :expence_date %>
  </div>
</div>
<div><%= form.submit "Submit", class: "btn btn-primary" %></div>

<% end %> 

<script>
  const createButton = document.getElementById("addItem")
  
  function onCreateClick(e) {
    e.preventDefault()
    const row = document.querySelector('#fieldsetContainer fieldset').cloneNode( true )
    const invoiceItem = row.querySelector('#invoice_items_attributes_0_invoice_item')
    invoiceItem.value = ''
    const invoicePrice = row.querySelector('#invoice_items_attributes_0_price')
    invoicePrice.value = ''
    const invoiceQuantity = row.querySelector('#invoice_items_attributes_0_quantity')
    invoiceQuantity.value = ''
    document.getElementById('fieldsetContainer').appendChild(row)
    
    //document.querySelector('#fieldsetContainer').appendChild(row)
    
    // Get first fields set (DOM) const row = document.querySelector('#fieldsetContainer fieldset')
    // Clear the values const 
      //  - invoiceField = row.querySelector('#invoice_items_attributes_0_invoice_item')
      //  - invoiceField.value = ''
    // Insert to the DOM document.querySelector('#fieldsetContainer').appendChild(row)
    
    // const lastId = document.querySelector('#fieldsetContainer').lastElementChild.id;

    // const newId = parseInt(lastId, 10) + 1;

    // const newFieldset = document.getElementById('0').outerHTML.replace(/0/g,newId);

    //  document.querySelector('#fieldsetContainer').insertAdjacentHTML(
    //     'beforeend', newFieldset)

    bindDeleteButtonClickEvents()
  }

  function buttonsArray() {
    allButtons=Array.from(document.querySelectorAll('.deleteButtons'))
    return allButtons
  }
  
  function onDeleteClick(e) {
    e.preventDefault()
    
    console.log(e.target)
    e.target.closest('fieldset').remove()
  }

  function onDeleteRow(button) {
    
    if (button.id == e.target.id) {
          alert("are you sure?")
          deleteButton.closest('fieldset').remove()
        }
  } 
  createButton.addEventListener("click", onCreateClick)

  function bindDeleteButtonClickEvents() {
    const array = buttonsArray()
    array.forEach(deleteButton => {
        deleteButton.addEventListener("click", onDeleteClick)

        })
  }
  
  // const createButton = document.getElementById("addItem")
  // createButton.addEventListener("click", (e)=>{
  //  e.preventDefault()
  //   const lastId = document.querySelector('#fieldsetContainer').lastElementChild.id;

  //   const newId = parseInt(lastId, 10) + 1;

  //   const newFieldset = document.getElementById('0').outerHTML.replace(/0/g,newId);

  //   document.querySelector('#fieldsetContainer').insertAdjacentHTML(
  //       'beforeend', newFieldset
  //   ) 
  //   const deleteButtons = Array.from(document.querySelectorAll('.deleteButtons'))
  //   deleteButtons.forEach(deleteButton => deleteButton.addEventListener("click", (e)=>{
  //     deleteButtons.forEach(deleteButton => {
  //       if (deleteButton.id == e.target.id) {
  //         deleteButton.closest('fieldset').remove()
  //       }
  //     })
  //   })
  //   )
  // })
  </script>
